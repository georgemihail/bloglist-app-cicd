{"version":3,"sources":["components/RemoveButton.js","components/Blog.js","components/notification.js","components/BlogForm.js","components/ToggleElement.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["RemoveButton","props","user","username","blog","onClick","delPost","id","Blog","changeLikes","removeBlog","useState","visible","setVisible","toggleVisibility","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","style","className","title","author","url","likes","newObject","object","key","window","confirm","Notification","message","success","color","background","fontSize","borderStyle","borderRadius","padding","BlogForm","addBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","type","value","name","onChange","target","ToggleElement","hiddenWhenVisible","display","viewWhenVisible","label","children","token","axios","get","then","response","data","tokenNr","newPost","config","headers","Authorization","post","result","put","delete","status","require","credentials","App","blogs","setBlogs","setUsername","password","setPassword","setUser","notifyMessage","setNotifyMessage","notifysuccess","setNotifySuccess","useEffect","blogService","userSaved","localStorage","getItem","parsedUser","JSON","parse","handleLogin","loginService","setItem","stringify","catch","error","setTimeout","handleLikes","updatedBlog","map","b","console","log","deleteBlog","filter","displayBlogs","sort","a","removeItem","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8d2db4b.chunk.js","sourcesContent":["import React from 'react'\n\nconst RemoveButton = (props) => {\n  \n    if (\n      props.user !== null &&\n      props.user.username &&\n      props.blog.user.username &&\n      props.user.username === props.blog.user.username\n      ) {\n      return (\n        <div>\n        <button onClick={() => props.delPost(props.blog.id)}>Remove</button>\n        </div>\n      )\n      \n    } else {\n      return null\n    }\n}\n\nexport default RemoveButton\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RemoveButton from './RemoveButton'\r\n\r\n\r\nconst Blog = ({ blog, changeLikes, user, removeBlog }) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const handleLike = () => {\r\n    const newObject = {\r\n      object: {\r\n      user: blog.user,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url\r\n      },\r\n      id: blog.id\r\n    }\r\n\r\n    changeLikes(newObject)\r\n\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    \r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`))\r\n    {\r\n      removeBlog(id)\r\n    }\r\n      \r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  if (!visible) {\r\n    return (\r\n      <div style={blogStyle} className=\"showBasic\">\r\n        {blog.title} {blog.author}\r\n        <button onClick={toggleVisibility}>{visible ? 'hide' : 'view'}</button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n    <div style={blogStyle} className=\"blogElement\">\r\n      <div className=\"showBasic\">\r\n      {blog.title} {blog.author}\r\n      <button onClick={toggleVisibility}>{visible ? 'hide' : 'view'}</button>\r\n      </div>\r\n      <div className=\"showUrl\">\r\n        {blog.url}\r\n      </div>\r\n      <div className=\"showLikes\">\r\n        likes <span className=\"likesNr\">{blog.likes}</span><button onClick={handleLike}> like </button>\r\n      </div>\r\n      <div className=\"showAuthor\">\r\n        {blog.author}\r\n      </div>\r\n      <div>\r\n        {user && blog.user\r\n          ? <RemoveButton key={blog.id} user={user} blog={blog} delPost={handleDelete}/> \r\n          : ''\r\n          }\r\n      </div>\r\n      \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  changeLikes: PropTypes.func.isRequired,\r\n  removeBlog: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\n\nconst Notification = ({message, success}) => {\n    if (!message) {\n        return null\n    }\n\n    const successMessage = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px',\n    }\n\n    const faildMessage = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px',\n    }\n    \n    return (\n        <div style={success ? successMessage : faildMessage} id=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({addBlog}) => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const handlerPost = (event) => {\n        event.preventDefault()\n        addBlog({\n            title: title,\n            author: author,\n            url: url,\n        })\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n    }\n    return(\n        <div>\n        <h2>create new</h2>\n          <form onSubmit={handlerPost}>\n            <div>\n              title:\n              <input\n              type=\"text\"\n              value={title}\n              name=\"title\"\n              className=\"titleInput\"\n              onChange={({target}) => setTitle(target.value)}\n              />\n            </div>\n            <div>\n              author:\n              <input\n              type=\"text\"\n              value={author}\n              className=\"authorInput\"\n              onChange={({target}) => setAuthor(target.value)}\n              />\n            </div>\n            <div>\n              url:\n              <input\n              type=\"text\"\n              value={url}\n              className=\"urlInput\"\n              onChange={({target}) => setUrl(target.value)}\n              />\n            </div>\n            <div>\n              <button id=\"create-blog\">create</button>\n            </div>\n          </form>\n      </div>\n    )\n}\n\nBlogForm.propTypes = {\n  addBlog: PropTypes.func.isRequired\n}\n\nexport default BlogForm","import React, {useState} from 'react'\n\nconst ToggleElement = (props) => {\n    const [visible, setVisible] = useState(false)\n\n    const hiddenWhenVisible = {\n      display: visible ? 'none' : ''\n    }\n\n    const viewWhenVisible = {\n      display: visible ? '' : 'none'\n    }\n\n    const toggleVisibility = () => {\n      setVisible(!visible)\n    }\n\n    return (\n      <div>\n        <div style={hiddenWhenVisible}>\n          <button onClick={toggleVisibility}>{props.label}</button>\n        </div>\n        <div style={viewWhenVisible}>\n            {props.children}\n            <div>\n              <button onClick={toggleVisibility}>Cancel</button>\n            </div>\n        </div>\n      </div>\n    )\n}\n\nexport default ToggleElement","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = tokenNr => {\n  if (!tokenNr){\n    token = null\n  } else {\n    token = `bearer ${tokenNr}`\n  }\n  \n}\n\nconst createPost = newPost => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const response = axios.post(baseUrl,newPost, config)\n  return response.then(result => result.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst changeLikes = (newObject) => {\n  const response = axios.put(`${baseUrl}/${newObject.id}`, newObject.object)\n  return response.then(result => result.data)\n}\n\nconst deleteABlog = (id) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  \n  const response = axios.delete(`${baseUrl}/${id}`, config)\n  return response.then(result => result.status)\n}\n\nexport default { getAll, setToken, createPost, changeLikes, deleteABlog }","const axios = require('axios')\nconst baseUrl = '/api/login'\n\nconst login = credentials => {\n    const response = axios.post(baseUrl, credentials)\n    return response.then(result => result.data)\n}\n\nexport default {login}","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/notification'\nimport BlogForm from './components/BlogForm'\nimport ToggleElement from './components/ToggleElement'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [notifyMessage, setNotifyMessage] = useState(null)\n  const [notifysuccess, setNotifySuccess] = useState(false)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const userSaved = window.localStorage.getItem('userSaved')\n    if (userSaved) {\n      const parsedUser = JSON.parse(userSaved)\n      setUser(parsedUser)\n      blogService.setToken(parsedUser.token)\n    }\n  }, [])\n  \n  const handleLogin = (event) => {\n    event.preventDefault()\n    loginService\n      .login({\n        username: username,\n        password: password\n      })\n      .then(result => {\n        setUser(result)\n        window.localStorage.setItem('userSaved', JSON.stringify(result))\n        blogService.setToken(result.token)\n        \n      })\n      .catch(error => {\n        setNotifyMessage('wrong username or password')\n        setTimeout(() => {\n          setNotifyMessage(null)\n        }, 4000)\n      })\n      setUsername('')\n      setPassword('')\n  }\n\n  const removeUser = () => {\n    window.localStorage.removeItem('userSaved')\n    setUser(null)\n    blogService.setToken(null)\n  }\n\n  const handlerPost = (newPost) => {\n    blogService.createPost(newPost)\n    .then(result => {\n      \n      setBlogs(blogs.concat(result))\n      setNotifySuccess(true)\n      setNotifyMessage(\n      `a new blog ${result.title} by ${result.author} added`\n      )\n      setTimeout(() => {\n        setNotifyMessage(null)\n        setNotifySuccess(false)\n      }, 4000)\n    })\n    .catch(error => {\n      setNotifyMessage(\n        `Cannot create a new post because ${error.message}`\n      )\n      setTimeout(() => {\n        setNotifyMessage(null)\n      }, 4000)\n    })\n  }\n\n  const handleLikes = (newObject) => {\n    blogService\n      .changeLikes(newObject)\n      .then(updatedBlog => {\n        setBlogs(\n          blogs.map(b => b.id !== newObject.id ? b : updatedBlog)\n        )\n      })\n      .catch(error => {\n        console.log('There is an error: ', error)\n      })\n  }\n\n  const deleteBlog = (id) => {\n    blogService\n      .deleteABlog(id)\n      .then(result => {\n        setBlogs(\n          blogs.filter(blog => blog.id !== id)\n        )\n      })\n      .catch(error => {\n        console.log('Could not detele the blog because', error)\n      })\n  }\n\n  const loginForm = () => (\n    <div>\n      <h2> log in to aplication </h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n          type=\"text\"\n          name=\"Username\"\n          value={username}\n          onChange={({target}) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n          type=\"password\"\n          value={password}\n          onChange={({target}) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n\n  const displayBlogs = blogs.sort(function(a, b) { \n    return b.likes - a.likes\n  })\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={notifyMessage} success={notifysuccess}/>\n      {user === null\n        ? loginForm()\n        : <div>\n            <div>\n              {user.name} logged in\n              <button onClick={removeUser}>logout</button>\n            </div>\n            <div>\n            <ToggleElement label=\"new blog\">\n              <BlogForm addBlog={handlerPost} />\n            </ToggleElement>\n            </div>\n            \n          </div>\n          \n        }\n      \n      {displayBlogs.map(blog =>\n        <Blog \n          key={blog.id}\n          blog={blog}\n          changeLikes={handleLikes}\n          user={user}\n          removeBlog={deleteBlog}\n        />\n        \n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}